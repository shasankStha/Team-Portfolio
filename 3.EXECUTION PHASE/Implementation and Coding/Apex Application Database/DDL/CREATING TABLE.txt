-- Creating user table
CREATE TABLE "USER" (
    User_id NUMBER(6),
    Username VARCHAR2(50) unique,
    Password VARCHAR2(4000),
    Email VARCHAR2(100) unique,
    First_name VARCHAR2(50),
    Last_name VARCHAR2(50),
    Contact_number VARCHAR2(10) unique,
    Role CHAR(1),
    Created_date DATE,
    Last_loggedin_date DATE
);

-- Adding primary key constraint for user_id
ALTER TABLE "USER"
ADD CONSTRAINT PK_USER_ID PRIMARY KEY (User_id);

-- Adding check constraint for role
ALTER TABLE "USER"
ADD CONSTRAINT CHK_USER_ROLE CHECK (Role IN ('A','T','C'));

-- Creating Admin table
CREATE TABLE ADMIN(
    User_id NUMBER(6)
);

-- Adding foreign key constraint for user_id
ALTER TABLE ADMIN
ADD CONSTRAINT FK_ADMIN_USER_ID FOREIGN KEY (User_id) REFERENCES "USER"(User_id);

-- Creating Trader table
CREATE TABLE TRADER(
    User_id NUMBER(6),
    Address VARCHAR2(255),
    Status CHAR(1)
);

-- Adding foreign key constraint for user_id
ALTER TABLE TRADER
ADD CONSTRAINT FK_TRADER_USER_ID FOREIGN KEY (User_id) REFERENCES "USER"(User_id);
--Adding check constraint status
ALTER TABLE TRADER
ADD CONSTRAINT chk_trader_status check(status in('1','0'));

-- Creating Customer table
CREATE TABLE CUSTOMER(
    User_id NUMBER(6),
    Address VARCHAR2(255),
    Date_of_birth DATE,
    Gender CHAR(1),
    Profile_picture BLOB,
    Status CHAR(1)
);

-- Adding foreign key constraint for user_id
ALTER TABLE CUSTOMER
ADD CONSTRAINT FK_CUSTOMER_USER_ID FOREIGN KEY (User_id) REFERENCES "USER"(User_id);

-- Adding check constraint for gender
ALTER TABLE CUSTOMER
ADD CONSTRAINT CHK_CUSTOMER_GENDER CHECK (Gender IN ('M','F','O'));

--Adding check constraint status
ALTER TABLE CUSTOMER
ADD CONSTRAINT chk_customer_status check(status in('1','0'));

-- Creating shop table
CREATE TABLE SHOP (
    Shop_id NUMBER(4),
    Shop_name VARCHAR2(100) unique,
    Shop_description VARCHAR2(2000),
    Location VARCHAR2(255),
    Picture BLOB,
    Contact_number VARCHAR2(10) unique,
    User_id NUMBER(6)
);

-- Adding primary key constraint for shop_id
ALTER TABLE SHOP
ADD CONSTRAINT PK_SHOP_ID PRIMARY KEY (Shop_id);

-- Adding foreign key constraint for user_id
ALTER TABLE SHOP
ADD CONSTRAINT FK_SHOP_USER_ID FOREIGN KEY (User_id) REFERENCES "USER"(User_id);

-- Creating PRODUCT_CATEGORY table
CREATE TABLE PRODUCT_CATEGORY (
    Category_id NUMBER(4),
    Category_name VARCHAR2(100)
);

-- Adding primary key constraint for category_id
ALTER TABLE PRODUCT_CATEGORY
ADD CONSTRAINT PK_CATEGORY_ID PRIMARY KEY (Category_id);

-- Creating DISCOUNT table
CREATE TABLE DISCOUNT (
    Discount_id NUMBER(4),
    Dis_percentage NUMBER(5, 2),
    Start_date DATE,
    End_date DATE,
    User_id NUMBER(6)
);

-- Adding primary key constraint for discount_id
ALTER TABLE DISCOUNT
ADD CONSTRAINT PK_DISCOUNT_ID PRIMARY KEY (Discount_id);

-- Adding foreign key constraint for user_id
ALTER TABLE DISCOUNT
ADD CONSTRAINT FK_DISCOUNT_USER_ID FOREIGN KEY (User_id) REFERENCES "USER"(User_id);

-- Creating PRODUCT table
CREATE TABLE PRODUCT (
    Product_id NUMBER(8),
    Name VARCHAR2(100) unique,
    Image BLOB,
    Description VARCHAR2(2000),
    Price NUMBER(10, 2),
    Stock_Available NUMBER(8),
    Min_Order NUMBER(4),
    Max_Order NUMBER(4),
    Allergy_Information VARCHAR2(2000),
    Status CHAR(1),
    Shop_id NUMBER(4),
    Category_id NUMBER(4),
    Discount_id NUMBER(4)
);

-- Adding primary key constraint for product_id
ALTER TABLE PRODUCT
ADD CONSTRAINT PK_PRODUCT_ID PRIMARY KEY (Product_id);
--Adding check constraint status
ALTER TABLE PRODUCT
ADD CONSTRAINT chk_product_status check(status in('1','0'));

-- Adding foreign key constraints
ALTER TABLE PRODUCT
ADD CONSTRAINT FK_PRODUCT_SHOP_ID FOREIGN KEY (Shop_id) REFERENCES SHOP(Shop_id);

ALTER TABLE PRODUCT
ADD CONSTRAINT FK_PRODUCT_CATEGORY_ID FOREIGN KEY (Category_id) REFERENCES PRODUCT_CATEGORY(Category_id);

ALTER TABLE PRODUCT
ADD CONSTRAINT FK_PRODUCT_DISCOUNT_ID FOREIGN KEY (Discount_id) REFERENCES DISCOUNT(Discount_id);

-- Creating REVIEW table
CREATE TABLE REVIEW (
    Review_id NUMBER(8),
    Rating NUMBER(5),
    User_comment VARCHAR2(4000),
    Review_Date DATE,
    Status CHAR(1),
    Product_id NUMBER(8),
    User_id NUMBER(6)
);

-- Adding primary key constraint for review_id
ALTER TABLE REVIEW
ADD CONSTRAINT PK_REVIEW_ID PRIMARY KEY (Review_id);

-- Adding foreign key constraints
ALTER TABLE REVIEW
ADD CONSTRAINT FK_REVIEW_PRODUCT_ID FOREIGN KEY (Product_id) REFERENCES PRODUCT(Product_id);

ALTER TABLE REVIEW
ADD CONSTRAINT FK_REVIEW_USER_ID FOREIGN KEY (User_id) REFERENCES "USER"(User_id);

--Adding check constraint status
ALTER TABLE REVIEW
ADD CONSTRAINT chk_review_status check(status in('1','0'));

-- Creating FAVOURITE_ITEM table
CREATE TABLE FAVOURITE_ITEM (
    Favourite_item_id NUMBER(8),
    User_id NUMBER(6),
    Product_id NUMBER(8)
);

-- Adding primary key constraint for favourite_item_id
ALTER TABLE FAVOURITE_ITEM
ADD CONSTRAINT PK_FAVOURITE_ITEM_ID PRIMARY KEY (Favourite_item_id);

-- Adding foreign key constraints
ALTER TABLE FAVOURITE_ITEM
ADD CONSTRAINT FK_FAVOURITE_ITEM_USER_ID FOREIGN KEY (User_id) REFERENCES "USER"(User_id);

ALTER TABLE FAVOURITE_ITEM
ADD CONSTRAINT FK_FAVOURITE_ITEM_PRODUCT_ID FOREIGN KEY (Product_id) REFERENCES PRODUCT(Product_id);

-- Creating CART table
CREATE TABLE CART (
    Cart_id NUMBER(6),
    User_id NUMBER(6)
);

-- Adding primary key constraint for cart_id
ALTER TABLE CART
ADD CONSTRAINT PK_CART_ID PRIMARY KEY (Cart_id);

-- Adding foreign key constraint for user_id
ALTER TABLE CART
ADD CONSTRAINT FK_CART_USER_ID FOREIGN KEY (User_id) REFERENCES "USER"(User_id);

-- Creating CART_ITEM table
CREATE TABLE CART_ITEM (
    Cart_item_id NUMBER(6),
    Cart_id NUMBER(6),
    Product_id NUMBER(6),
    Quantity NUMBER(2)
);

-- Adding primary key constraint for cart_item_id
ALTER TABLE CART_ITEM
ADD CONSTRAINT PK_CART_ITEM_ID PRIMARY KEY (Cart_item_id);

-- Adding foreign key constraints
ALTER TABLE CART_ITEM
ADD CONSTRAINT FK_CART_ITEM_CART_ID FOREIGN KEY (Cart_id) REFERENCES CART(Cart_id);

ALTER TABLE CART_ITEM
ADD CONSTRAINT FK_CART_ITEM_PRODUCT_ID FOREIGN KEY (Product_id) REFERENCES PRODUCT(Product_id);

-- Creating COLLECTION_SLOT table
CREATE TABLE COLLECTION_SLOT (
    Collection_slot_id NUMBER(4),
    Start_time TIMESTAMP,
    End_time TIMESTAMP,
    Slot_Date DATE,
    Day_of_week VARCHAR2(3)
);

-- Adding primary key constraint for collection_slot_id
ALTER TABLE COLLECTION_SLOT
ADD CONSTRAINT PK_COLLECTION_SLOT_ID PRIMARY KEY (Collection_slot_id);

-- Adding check constraint for day_of_week
ALTER TABLE COLLECTION_SLOT
ADD CONSTRAINT CHK_DAY_OF_WEEK CHECK (Day_of_week IN ('WED','THU','FRI'));

-- Creating ORDER table
CREATE TABLE "ORDER" (
    Order_id NUMBER(8),
    Order_Date DATE,
    Quantity NUMBER(2),
    Discount NUMBER(10, 2),
    Total_price NUMBER(10, 2),
    Payment_confirmation CHAR(1),
    User_id NUMBER(6),
    Collection_slot_id NUMBER(4)
 );

-- Adding primary key constraint for order_id
ALTER TABLE "ORDER"
ADD CONSTRAINT PK_ORDER_ID PRIMARY KEY (Order_id);

-- Adding foreign key constraints
ALTER TABLE "ORDER"
ADD CONSTRAINT FK_ORDER_USER_ID FOREIGN KEY (User_id) REFERENCES "USER"(User_id);

ALTER TABLE "ORDER"
ADD CONSTRAINT FK_ORDER_COLLECTION_SLOT_ID FOREIGN KEY (Collection_slot_id) REFERENCES COLLECTION_SLOT(Collection_slot_id);

-- Creating ORDER_ITEM table
CREATE TABLE ORDER_ITEM (
    Order_item_id NUMBER(8),
    Quantity NUMBER(2),
    Price NUMBER(10, 2),
    Discount NUMBER(10, 2),
    Total_Amount NUMBER(10, 2),
    Order_id NUMBER(8),
    Product_id NUMBER(8)
);

-- Adding primary key constraint for order_item_id
ALTER TABLE ORDER_ITEM
ADD CONSTRAINT PK_ORDER_ITEM_ID PRIMARY KEY (Order_item_id);

-- Adding foreign key constraints
ALTER TABLE ORDER_ITEM
ADD CONSTRAINT FK_ORDER_ITEM_ORDER_ID FOREIGN KEY (Order_id) REFERENCES "ORDER"(Order_id);

ALTER TABLE ORDER_ITEM
ADD CONSTRAINT FK_ORDER_ITEM_PRODUCT_ID FOREIGN KEY (Product_id) REFERENCES PRODUCT(Product_id);

-- Creating PAYMENT_METHOD table
CREATE TABLE PAYMENT_METHOD (
    Payment_method_id NUMBER(1),
    Method VARCHAR2(6)
);

-- Adding primary key constraint for payment_method_id
ALTER TABLE PAYMENT_METHOD
ADD CONSTRAINT PK_PAYMENT_METHOD_ID PRIMARY KEY (Payment_method_id);

-- Adding check constraint for method
ALTER TABLE PAYMENT_METHOD
ADD CONSTRAINT CHK_PAYMENT_METHOD CHECK (Method IN ('PAYPAL', 'STRIPE'));

-- Creating PAYMENT table
CREATE TABLE PAYMENT (
    Payment_id NUMBER(8),
    Amount NUMBER(10, 2),
    Payment_Date DATE,
    User_id NUMBER(6),
    Order_id NUMBER(6),
    Payment_method_id NUMBER(1)
);

-- Adding primary key constraint for payment_id
ALTER TABLE PAYMENT
ADD CONSTRAINT PK_PAYMENT_ID PRIMARY KEY (Payment_id);

-- Adding foreign key constraints
ALTER TABLE PAYMENT
ADD CONSTRAINT FK_PAYMENT_USER_ID FOREIGN KEY (User_id) REFERENCES "USER"(User_id);

ALTER TABLE PAYMENT
ADD CONSTRAINT FK_PAYMENT_ORDER_ID FOREIGN KEY (Order_id) REFERENCES "ORDER"(Order_id);

ALTER TABLE PAYMENT
ADD CONSTRAINT FK_PAYMENT_PAYMENT_METHOD_ID FOREIGN KEY (Payment_method_id) REFERENCES PAYMENT_METHOD(Payment_method_id);

-- Creating REPORT table
CREATE TABLE REPORT (
    Report_id NUMBER(8),
    Report_Date DATE,
    Report_type VARCHAR2(100),
    User_id NUMBER(6),
    Order_id NUMBER(8),
    Product_id NUMBER(8)
);

-- Adding primary key constraint for report_id
ALTER TABLE REPORT
ADD CONSTRAINT PK_REPORT_ID PRIMARY KEY (Report_id);

-- Adding foreign key constraints
ALTER TABLE REPORT
ADD CONSTRAINT FK_REPORT_USER_ID FOREIGN KEY (User_id) REFERENCES "USER"(User_id);

ALTER TABLE REPORT
ADD CONSTRAINT FK_REPORT_ORDER_ID FOREIGN KEY (Order_id) REFERENCES "ORDER"(Order_id);

ALTER TABLE REPORT
ADD CONSTRAINT FK_REPORT_PRODUCT_ID FOREIGN KEY (Product_id) REFERENCES PRODUCT(Product_id);